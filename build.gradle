plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id "com.google.cloud.tools.jib" version "3.4.4"
}

group = 'sh.rime.demo'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

ext {
    shoreVersion = "1.9.3"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {

    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    annotationProcessor("org.mapstruct:mapstruct-processor")
    implementation("sh.rime.reactor:shore-r2dbc")
    implementation("sh.rime.reactor:shore-log")
    implementation("sh.rime.reactor:shore-web")
    implementation("sh.rime.reactor:shore-limit")
    implementation("sh.rime.reactor:shore-rabbitmq")
    implementation("sh.rime.reactor:shore-s3")
    testImplementation("sh.rime.reactor:shore-test")

}

tasks.named('test') {
    useJUnitPlatform()
}

dependencyManagement {
    imports {
        mavenBom "sh.rime.reactor:shore-bom:$shoreVersion"
    }
    resolutionStrategy {
        cacheChangingModulesFor(0, "seconds")
    }
}

jib {
    allowInsecureRegistries = true
    from {
        image = "youtaqiu/jre-otel:21"
    }
    to {
        image = "youtaqiu/${project.name}"
        auth {
            username System.getenv("dockerUsername") ?: dockerUsername
            password System.getenv("dockerPassword") ?: dockerPassword
        }
        tags = ["latest"]
    }
    container {
        creationTime = 'USE_CURRENT_TIMESTAMP'
        jvmFlags = ['-Djava.security.egd=file:/dev/./urandom', '-Dfile.encoding=utf-8', '-Dnacos.logging.default.config.enabled=false', '-Duser.timezone=GMT+08', '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED', '-Xshare:off', '-javaagent:/opentelemetry.jar']
    }
}